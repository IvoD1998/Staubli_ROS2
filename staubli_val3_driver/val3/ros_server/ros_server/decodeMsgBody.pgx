<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="decodeMsgBody" access="public">
    <Parameters xmlns="http://www.staubli.com/robotics/VAL3/Param/1">
      <Parameter name="x_nMsgRecvState" type="num" xsi:type="element" use="reference" />
    </Parameters>
    <Locals>
      <Local name="l_bFlag" type="bool" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  // Copyright (c) 2016, Ocado Technology - Robotics Research Team
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.



  l_bFlag=false

  switch rosGenericMsg.header.nMsgType
    case nStdMsgType["JOINT_TRAJ_PT"]
      call decTrajPt(l_bFlag)
    break
    case nStdMsgType["JOINT_TRAJ_PT_FULL"]
      call decTrajPtFull(l_bFlag)
    break
    default
    break
  endSwitch

  if (l_bFlag==true)
    // move on to state 4: push motion into buffer
    x_nMsgRecvState=nPushMotion
  else
    // error whilst decoding msg body...
    if (rosGenericMsg.header.nCommType==2)
      switch rosGenericMsg.header.nMsgType
        case nStdMsgType["JOINT_TRAJ_PT"]
          rosTrajPtAck.header.nReplyCode=2
        break
        case nStdMsgType["JOINT_TRAJ_PT_FULL"]
          rosTrajPtFAck.header.nReplyCode=2
        break
        default
        break
      endSwitch
      // jump to state 5: sendAck()
      x_nMsgRecvState=nAck
    else
      // reset state machine, since no ACK is required
      x_nMsgRecvState=nReset
    endIf
  endIf
end
]]></Code>
  </Program>
</Programs>