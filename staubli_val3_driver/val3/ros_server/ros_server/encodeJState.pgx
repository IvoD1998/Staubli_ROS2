<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="encodeJState" access="public">
    <Parameters xmlns="http://www.staubli.com/robotics/VAL3/Param/1">
      <Parameter name="x_jCurrPose" type="jointRx" xsi:type="element" use="reference" />
    </Parameters>
    <Code><![CDATA[begin
  // Copyright (c) 2016, Ocado Technology - Robotics Research Team
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.



  // encode 'prefix' and 'header'
  call encPrefixHeader(rosJointMsg.prefix, rosJointMsg.header)

  // encode 'sequence' variable of body message (data)
  toBinary(rosJointMsg.jointState.nSeq,1,"-4l",rosJointMsg.body.nData)

  call toJointArrayRad(x_jCurrPose, rosJointMsg.jointState.nJoints)

  // encode 10 values representing joints[10]
  toBinary(rosJointMsg.jointState.nJoints,10,"4.0l",rosJointMsg.body.nData[4])
end]]></Code>
  </Program>
</Programs>
