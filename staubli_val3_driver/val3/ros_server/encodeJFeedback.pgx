<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="encodeJFeedback">
    <Parameters xmlns="http://www.staubli.com/robotics/VAL3/Param/1">
      <Parameter name="x_nTime" type="num" xsi:type="element" />
      <Parameter name="x_jPosition" type="jointRx" xsi:type="element" />
      <Parameter name="x_jVelocity" type="jointRx" xsi:type="element" />
    </Parameters>
    <Code><![CDATA[begin
  // Copyright (c) 2021, Institute for Factory Automation and Production Systems (FAPS)
  //
  // Licensed under the Apache License, Version 2.0 (the "License");
  // you may not use this file except in compliance with the License.
  // You may obtain a copy of the License at
  //
  //     http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.


  // encode 'prefix' and 'header'
  call encPrefixHeader(rosJointFbkMsg.prefix, rosJointFbkMsg.header)

  // encode 'robot_id' variable of body message (data)
  toBinary(rosJointFbkMsg.jointFeedback.nRobotId, 1, "-4l", rosJointFbkMsg.body.nData)

  // encode 'valid_fields' variable of body message (data)
  toBinary(rosJointFbkMsg.jointFeedback.nValidFields, 1, "-4l", rosJointFbkMsg.body.nData[4])

  // encode 'time' variable of body message (data)
  toBinary(rosJointFbkMsg.jointFeedback.nTime, 1, "-4l", rosJointFbkMsg.body.nData[8])

  call toJointArrayRad(x_jPosition, rosJointFbkMsg.jointFeedback.nPositions)

  // encode 10 values representing joint positions [10]
  toBinary(rosJointFbkMsg.jointFeedback.nPositions, 10, "4.0l", rosJointFbkMsg.body.nData[12])

  call toJointArrayRad(x_jVelocity, rosJointFbkMsg.jointFeedback.nVelocities)

  // encode 10 values representing joint velocities [10]
  toBinary(rosJointFbkMsg.jointFeedback.nVelocities, 10, "4.0l", rosJointFbkMsg.body.nData[52])
end]]></Code>
  </Program>
</Programs>